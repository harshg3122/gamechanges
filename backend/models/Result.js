const mongoose = require("mongoose");

const ResultSchema = new mongoose.Schema(
  {
    roundId: {
      type: mongoose.Schema.Types.ObjectId,
      required: true,
      ref: "Round",
      unique: true, // Only one result per round
      index: true,
    },
    date: {
      type: String,
      required: true,
    },
    timeSlot: {
      type: String,
      required: true,
    },
    tripleDigitNumber: {
      type: String,
      required: true,
      validate: {
        validator: function (v) {
          return /^\d{3}$/.test(v);
        },
        message: "Triple digit number must be exactly 3 digits",
      },
    },
    singleDigitResult: {
      type: String,
      required: true,
      validate: {
        validator: function (v) {
          return /^[0-9]$/.test(v);
        },
        message: "Single digit result must be a single digit (0-9)",
      },
    },
    declaredBy: {
      type: String,
      enum: ["admin", "system"],
      required: true,
    },
    declaredAt: {
      type: Date,
      default: Date.now,
    },
    sumOfTripleDigit: {
      type: Number,
      required: true,
      min: 0,
      max: 27,
    },
    isAutoGenerated: {
      type: Boolean,
      default: false,
    },
  },
  {
    timestamps: true,
  }
);

// Index for efficient queries
ResultSchema.index({ date: -1, timeSlot: -1 });
ResultSchema.index({ declaredAt: -1 });

module.exports = mongoose.model("Result", ResultSchema);
